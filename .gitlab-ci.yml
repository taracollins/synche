# This file is a template, and might need editing before it works on your project.
image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.computing.dcu.ie/collint9/2021-ca400-collint9-coynemt2

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - curl -o /usr/local/bin/swagger -L'#' "https://github.com/go-swagger/go-swagger/releases/download/v0.27.0/swagger_linux_amd64"
  - chmod +x /usr/local/bin/swagger
  - go get github.com/vektra/mockery/v2/.../
  - cd $GOPATH/src/$REPO_NAME/src
  - swagger version
  - echo "Running make generate"
  - make generate
  - go generate ./...

stages:
  - test
  - build
  - deploy

format-test:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  script:
    # build the client
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/synche_client client/main.go
    # build the server
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/synche_server server/main.go
