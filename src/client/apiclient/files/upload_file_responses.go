// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"gitlab.computing.dcu.ie/collint9/2021-ca400-collint9-coynemt2/src/client/models"
)

// UploadFileReader is a Reader for the UploadFile structure.
type UploadFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUploadFileCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUploadFileConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewUploadFileNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUploadFileCreated creates a UploadFileCreated with default headers values
func NewUploadFileCreated() *UploadFileCreated {
	return &UploadFileCreated{}
}

/* UploadFileCreated describes a response with status code 201, with default header values.

OK
*/
type UploadFileCreated struct {
	Payload *models.UploadedChunk
}

func (o *UploadFileCreated) Error() string {
	return fmt.Sprintf("[POST /upload][%d] uploadFileCreated  %+v", 201, o.Payload)
}
func (o *UploadFileCreated) GetPayload() *models.UploadedChunk {
	return o.Payload
}

func (o *UploadFileCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UploadedChunk)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFileBadRequest creates a UploadFileBadRequest with default headers values
func NewUploadFileBadRequest() *UploadFileBadRequest {
	return &UploadFileBadRequest{}
}

/* UploadFileBadRequest describes a response with status code 400, with default header values.

error
*/
type UploadFileBadRequest struct {
	Payload *models.Error
}

func (o *UploadFileBadRequest) Error() string {
	return fmt.Sprintf("[POST /upload][%d] uploadFileBadRequest  %+v", 400, o.Payload)
}
func (o *UploadFileBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFileConflict creates a UploadFileConflict with default headers values
func NewUploadFileConflict() *UploadFileConflict {
	return &UploadFileConflict{}
}

/* UploadFileConflict describes a response with status code 409, with default header values.

error
*/
type UploadFileConflict struct {
	Payload *models.Error
}

func (o *UploadFileConflict) Error() string {
	return fmt.Sprintf("[POST /upload][%d] uploadFileConflict  %+v", 409, o.Payload)
}
func (o *UploadFileConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *UploadFileConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadFileNotImplemented creates a UploadFileNotImplemented with default headers values
func NewUploadFileNotImplemented() *UploadFileNotImplemented {
	return &UploadFileNotImplemented{}
}

/* UploadFileNotImplemented describes a response with status code 501, with default header values.

not implemented
*/
type UploadFileNotImplemented struct {
	Payload models.NotImplemented
}

func (o *UploadFileNotImplemented) Error() string {
	return fmt.Sprintf("[POST /upload][%d] uploadFileNotImplemented  %+v", 501, o.Payload)
}
func (o *UploadFileNotImplemented) GetPayload() models.NotImplemented {
	return o.Payload
}

func (o *UploadFileNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
