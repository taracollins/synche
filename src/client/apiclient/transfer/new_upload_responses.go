// Code generated by go-swagger; DO NOT EDIT.

package transfer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"gitlab.computing.dcu.ie/collint9/2021-ca400-collint9-coynemt2/src/client/models"
)

// NewUploadReader is a Reader for the NewUpload structure.
type NewUploadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NewUploadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNewUploadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNewUploadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewNewUploadNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNewUploadOK creates a NewUploadOK with default headers values
func NewNewUploadOK() *NewUploadOK {
	return &NewUploadOK{}
}

/* NewUploadOK describes a response with status code 200, with default header values.

OK
*/
type NewUploadOK struct {
	Payload *models.NewFileUploadRequestAccepted
}

func (o *NewUploadOK) Error() string {
	return fmt.Sprintf("[POST /upload/new][%d] newUploadOK  %+v", 200, o.Payload)
}
func (o *NewUploadOK) GetPayload() *models.NewFileUploadRequestAccepted {
	return o.Payload
}

func (o *NewUploadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NewFileUploadRequestAccepted)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNewUploadBadRequest creates a NewUploadBadRequest with default headers values
func NewNewUploadBadRequest() *NewUploadBadRequest {
	return &NewUploadBadRequest{}
}

/* NewUploadBadRequest describes a response with status code 400, with default header values.

bad request
*/
type NewUploadBadRequest struct {
	Payload models.Error
}

func (o *NewUploadBadRequest) Error() string {
	return fmt.Sprintf("[POST /upload/new][%d] newUploadBadRequest  %+v", 400, o.Payload)
}
func (o *NewUploadBadRequest) GetPayload() models.Error {
	return o.Payload
}

func (o *NewUploadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNewUploadNotImplemented creates a NewUploadNotImplemented with default headers values
func NewNewUploadNotImplemented() *NewUploadNotImplemented {
	return &NewUploadNotImplemented{}
}

/* NewUploadNotImplemented describes a response with status code 501, with default header values.

not implemented
*/
type NewUploadNotImplemented struct {
	Payload models.NotImplemented
}

func (o *NewUploadNotImplemented) Error() string {
	return fmt.Sprintf("[POST /upload/new][%d] newUploadNotImplemented  %+v", 501, o.Payload)
}
func (o *NewUploadNotImplemented) GetPayload() models.NotImplemented {
	return o.Payload
}

func (o *NewUploadNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
