// Code generated by go-swagger; DO NOT EDIT.

package transfer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gitlab.computing.dcu.ie/collint9/2021-ca400-collint9-coynemt2/src/server/models"
)

// UploadChunkCreatedCode is the HTTP code returned for type UploadChunkCreated
const UploadChunkCreatedCode int = 201

/*UploadChunkCreated OK

swagger:response uploadChunkCreated
*/
type UploadChunkCreated struct {

	/*
	  In: Body
	*/
	Payload *models.UploadedChunk `json:"body,omitempty"`
}

// NewUploadChunkCreated creates UploadChunkCreated with default headers values
func NewUploadChunkCreated() *UploadChunkCreated {

	return &UploadChunkCreated{}
}

// WithPayload adds the payload to the upload chunk created response
func (o *UploadChunkCreated) WithPayload(payload *models.UploadedChunk) *UploadChunkCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload chunk created response
func (o *UploadChunkCreated) SetPayload(payload *models.UploadedChunk) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadChunkCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadChunkBadRequestCode is the HTTP code returned for type UploadChunkBadRequest
const UploadChunkBadRequestCode int = 400

/*UploadChunkBadRequest bad request

swagger:response uploadChunkBadRequest
*/
type UploadChunkBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewUploadChunkBadRequest creates UploadChunkBadRequest with default headers values
func NewUploadChunkBadRequest() *UploadChunkBadRequest {

	return &UploadChunkBadRequest{}
}

// WithPayload adds the payload to the upload chunk bad request response
func (o *UploadChunkBadRequest) WithPayload(payload models.Error) *UploadChunkBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload chunk bad request response
func (o *UploadChunkBadRequest) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadChunkBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UploadChunkConflictCode is the HTTP code returned for type UploadChunkConflict
const UploadChunkConflictCode int = 409

/*UploadChunkConflict the file already exists or cannot be written to

swagger:response uploadChunkConflict
*/
type UploadChunkConflict struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewUploadChunkConflict creates UploadChunkConflict with default headers values
func NewUploadChunkConflict() *UploadChunkConflict {

	return &UploadChunkConflict{}
}

// WithPayload adds the payload to the upload chunk conflict response
func (o *UploadChunkConflict) WithPayload(payload models.Error) *UploadChunkConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload chunk conflict response
func (o *UploadChunkConflict) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadChunkConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UploadChunkNotImplementedCode is the HTTP code returned for type UploadChunkNotImplemented
const UploadChunkNotImplementedCode int = 501

/*UploadChunkNotImplemented not implemented

swagger:response uploadChunkNotImplemented
*/
type UploadChunkNotImplemented struct {

	/*
	  In: Body
	*/
	Payload models.NotImplemented `json:"body,omitempty"`
}

// NewUploadChunkNotImplemented creates UploadChunkNotImplemented with default headers values
func NewUploadChunkNotImplemented() *UploadChunkNotImplemented {

	return &UploadChunkNotImplemented{}
}

// WithPayload adds the payload to the upload chunk not implemented response
func (o *UploadChunkNotImplemented) WithPayload(payload models.NotImplemented) *UploadChunkNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload chunk not implemented response
func (o *UploadChunkNotImplemented) SetPayload(payload models.NotImplemented) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadChunkNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
