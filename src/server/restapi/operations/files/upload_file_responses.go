// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gitlab.computing.dcu.ie/collint9/2021-ca400-collint9-coynemt2/src/server/models"
)

// UploadFileCreatedCode is the HTTP code returned for type UploadFileCreated
const UploadFileCreatedCode int = 201

/*UploadFileCreated OK

swagger:response uploadFileCreated
*/
type UploadFileCreated struct {

	/*
	  In: Body
	*/
	Payload *models.UploadedChunk `json:"body,omitempty"`
}

// NewUploadFileCreated creates UploadFileCreated with default headers values
func NewUploadFileCreated() *UploadFileCreated {

	return &UploadFileCreated{}
}

// WithPayload adds the payload to the upload file created response
func (o *UploadFileCreated) WithPayload(payload *models.UploadedChunk) *UploadFileCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload file created response
func (o *UploadFileCreated) SetPayload(payload *models.UploadedChunk) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadFileCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadFileBadRequestCode is the HTTP code returned for type UploadFileBadRequest
const UploadFileBadRequestCode int = 400

/*UploadFileBadRequest error

swagger:response uploadFileBadRequest
*/
type UploadFileBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadFileBadRequest creates UploadFileBadRequest with default headers values
func NewUploadFileBadRequest() *UploadFileBadRequest {

	return &UploadFileBadRequest{}
}

// WithPayload adds the payload to the upload file bad request response
func (o *UploadFileBadRequest) WithPayload(payload *models.Error) *UploadFileBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload file bad request response
func (o *UploadFileBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadFileBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadFileConflictCode is the HTTP code returned for type UploadFileConflict
const UploadFileConflictCode int = 409

/*UploadFileConflict error

swagger:response uploadFileConflict
*/
type UploadFileConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUploadFileConflict creates UploadFileConflict with default headers values
func NewUploadFileConflict() *UploadFileConflict {

	return &UploadFileConflict{}
}

// WithPayload adds the payload to the upload file conflict response
func (o *UploadFileConflict) WithPayload(payload *models.Error) *UploadFileConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload file conflict response
func (o *UploadFileConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadFileConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UploadFileNotImplementedCode is the HTTP code returned for type UploadFileNotImplemented
const UploadFileNotImplementedCode int = 501

/*UploadFileNotImplemented not implemented

swagger:response uploadFileNotImplemented
*/
type UploadFileNotImplemented struct {

	/*
	  In: Body
	*/
	Payload models.NotImplemented `json:"body,omitempty"`
}

// NewUploadFileNotImplemented creates UploadFileNotImplemented with default headers values
func NewUploadFileNotImplemented() *UploadFileNotImplemented {

	return &UploadFileNotImplemented{}
}

// WithPayload adds the payload to the upload file not implemented response
func (o *UploadFileNotImplemented) WithPayload(payload models.NotImplemented) *UploadFileNotImplemented {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the upload file not implemented response
func (o *UploadFileNotImplemented) SetPayload(payload models.NotImplemented) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UploadFileNotImplemented) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(501)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
